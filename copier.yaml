%YAML 1.2
---
_exclude:
  - copier.yaml
  - copier.yml
  - "~*"
  - "*.py[co]"
  - "__pycache__"
  - ".DS_Store"
  - ".svn"
  - ".git"
docker_tag:
  type: str
  help: |
    Specify the docker image to use.
    Hint: Use `nvidia/cuda` here for GPU support.
  default: ubuntu:latest

# ============
# System settings
# ============

# ============
# User settings
# ============
user_name:
  type: str
  help: Specify the name of the user to use in the Dockerfile
  default: vscode
uid:
  type: int
  help: Specify the user id of user `{{ user_name }}`
  default: 1000
group_name:
  type: str
  help: Specify the group for user `{{ user_name }}`
  default: "{{ user_name }}"
gid:
  type: int
  help: |
    Specify the group id of group `{{ group_name }}`
    CAUTION: The ID should be the same as or larger than 1000
  default: "{{ uid }}"
user_sudo:
  type: bool
  help: Add user `{{ user_name }}` to sudoers?
  default: true
wheel_gid:
  type: int
  help: |
    Specify the group id of the wheel group.
    NOTE: The ID must be different from the ID `{{ gid }}` of the group `{{ group_name }}`
  default: 999

# ============
# Shell settings
# ============
user_shell:
  type: str
  help: Specify the shell for user `{{ user_name }}` to use
  choices:
  - bash
  - zsh
  - nu
  default: bash
install_prezto:
  when: "{{ user_shell == 'zsh' }}"
  type: bool
  help: Install prezto?
  default: true
settings_prezto:
  when: "{{ user_shell == 'zsh' and install_prezto }}"
  type: bool
  help: Add recommended prezto settings?
  default: true

# ============
# Package settings
# ============
# ------------
# eza
# ------------
install_eza:
  type: bool
  help: Install eza (file-listing program)?
  default: false
install_eza_version:
  when: "{{ install_eza }}"
  type: str
  help: |
    Specify the version (git tag) of eza to install.
    Hint: format: v0.18.17
  default: latest

# ------------
# Python
# ------------
install_pyenv:
  type: bool
  help: Add pyenv (Python version manager)?
  default: false
install_pyenv_pyver:
  when: "{{ install_pyenv }}"
  type: str
  help: Specify the Python version to install with pyenv
  default: 3
install_poetry:
  type: bool
  help: Install poetry (Python package manager)?
  default: false
install_pipx:
  type: bool
  help: Install pipx (Python app manager)?
  default: false

# ------------
# Lean
# ------------
install_lean:
  type: bool
  help: Install Lean (Lean theorem prover)?
  default: false
install_lean_toolchain:
  when: "{{ install_lean }}"
  type: str
  help: Select the version of the Lean toolchain (stable/nightly/<specific version>/none)?
  default: stable

# ------------
# Rust
# ------------
install_rust:
  type: bool
  help: Install Rust?
  default: false

# ------------
# Node.js
# ------------
install_nvm:
  type: bool
  help: Install NVM (Node Version Manager)?
  default: false
install_nvm_version:
  when: "{{ install_nvm }}"
  type: str
  help: |
    Specify the NVM version to install
    Hint: format: v0.11.22
  default: v0.39.7
install_node_version:
  when: "{{ install_nvm }}"
  type: str
  help: Specify the Node.js version to install with NVM
  default: 22